version: '3.4'
services:
  metad0:
    image: docker.io/vesoft/nebula-metad:v3.6.0
    environment:
      USER: root
    command:
      - --meta_server_addrs=metad0:9559
      - --local_ip=metad0
      - --ws_ip=metad0
      - --port=9559
      - --ws_http_port=19559
      - --data_path=/data/meta
      - --log_dir=/logs
      - --v=0
      - --minloglevel=0
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://metad0:19559/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    ports:
      - 9559:9559
      - 19559:19559
      - 19560
    volumes:
      - ${DATA_DIR}/data/meta0:/data/meta
      - ${DATA_DIR}/logs/meta0:/logs
    networks:
      - nebula-net
    restart: on-failure
    cap_add:
      - SYS_PTRACE

  storaged0:
    image: docker.io/vesoft/nebula-storaged:v3.6.0
    environment:
      USER: root
      TZ:   "${TZ}"
    command:
      - --meta_server_addrs=metad0:9559
      - --local_ip=storaged0
      - --ws_ip=storaged0
      - --port=9779
      - --ws_http_port=19779
      - --data_path=/data/storage
      - --log_dir=/logs
      - --v=0
      - --minloglevel=0
    depends_on:
      - metad0
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://storaged0:19779/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    ports:
      - 9779:9779
      - 19779:19779
      - 19780
    volumes:
      - ${DATA_DIR}/data/storage0:/data/storage
      - ${DATA_DIR}/logs/storage0:/logs
    networks:
      - nebula-net
    restart: on-failure
    cap_add:
      - SYS_PTRACE

    
  listener0:
    image: vesoft/nebula-storaged:v3.6.0
    depends_on:
      - metad0
    environment:
      USER: root
      TZ:   "${TZ}"
    entrypoint: ["/usr/local/nebula/bin/nebula-storaged"]
    command:
      - "--flagfile=/usr/local/nebula/etc/nebula-storaged-listener.conf.production"
      - "--daemonize=false"
      - "--containerized=true"
      - "--meta_server_addrs=metad0:9559"
      - "--local_ip=172.10.10.101"
      - "--ws_ip=172.10.10.101"
      - "--port=9789"
      - "--ws_http_port=19789"
      - "--data_path=/data/listener"
      - "--log_dir=/logs"
      - "--stdout_log_file=storaged-listener-stdout.log"
      - "--stderr_log_file=storaged-listener-stderr.log"
      - "--minloglevel=0"
      - "--v=4"
      - "--redirect_stdout=true"
      - "--timestamp_in_logfile_name=true"
    ports:
      - "9789:9789"
      - 19789
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://listener0:19789/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
      - ${DATA_DIR}/data/listener0:/data/listener
      - ${DATA_DIR}/logs/listener0:/logs
    restart: on-failure
    cap_add:
      - SYS_PTRACE
    logging:
        driver: "json-file"
        options:
          max-size: "100k"
          max-file: "5"
    ### 由于Nebula 全文索引服务只支持使用IP地址访问，所以需要指定子网和网关
    networks:
        nebula-net:
          ipv4_address: 172.10.10.101

# Refer https://docs.nebula-graph.com.cn/3.6.0/4.deployment-and-installation/6.deploy-text-based-index/2.deploy-es/
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      - "discovery.type=single-node"
      - "ES_PORT=0.0.0.0:9200"
    ports:
      - 9200:9200
    depends_on:
      - metad0
    volumes:
      - ${DATA_DIR}/data/elasticsearch/data:/usr/share/elasticsearch/data
      - ${DATA_DIR}/logs/elasticsearch:/usr/share/elasticsearch/logs
    restart: on-failure
    cap_add:
      - SYS_PTRACE
    logging:
        driver: "json-file"
        options:
          max-size: "100k"
          max-file: "5"
    ### 由于Nebula 全文索引服务只支持使用IP地址访问，所以需要指定子网和网关
    networks:
        nebula-net:
          ipv4_address: 172.10.10.100

  graphd:
    image: docker.io/vesoft/nebula-graphd:v3.6.0
    environment:
      USER: root
      TZ:   "${TZ}"
    command:
      - --meta_server_addrs=metad0:9559
      - --port=9669
      - --local_ip=0.0.0.0
      - --ws_ip=0.0.0.0
      - --ws_http_port=19669
      - --log_dir=/logs
      - --v=0
      - --minloglevel=0
    depends_on:
      - storaged0
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://graphd:19669/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    ports:
      - 9669:9669
      - 19669:19669
      - 19670
    volumes:
      - ${DATA_DIR}/logs/graph:/logs
    networks:
      - nebula-net
    restart: on-failure
    cap_add:
      - SYS_PTRACE


  web:
      image: vesoft/nebula-graph-studio:v3.9
      environment:
        USER: root
        UPLOAD_DIR: ${MAPPING_DOCKER_DIR}
      ports:
        - 7001:7001
      volumes:
        - ${UPLOAD_DIR}:${MAPPING_DOCKER_DIR}:rw
      networks:
        - nebula-net
      restart: on-failure
      cap_add:
        - SYS_PTRACE
      logging:
        driver: "json-file"
        options:
          max-size: "100k"
          max-file: "5"
          
  http_gateway:
      image: kineviz/nebula-http-gateway:latest
      environment:
        DB_ADDRESS: graphd
        DB_PORT: 9669
      ports:
        - 8080:8080
      depends_on:
        - graphd
        - elasticsearch
      networks:
        - nebula-net
      restart: on-failure
      cap_add:
        - SYS_PTRACE
      logging:
        driver: "json-file"
        options:
          max-size: "100k"
          max-file: "5"

networks:
  nebula-net:
    external: true